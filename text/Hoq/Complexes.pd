Произведение высших типов
--------------------------


Легко видеть, что с помощью интервала и типов данных с условиями
можно определить любой высший индуктивный тип.
Но теперь, когда о путях можно думать как об отображениях из интервала,
а о высших путях, соответственно, как об отображениях из кубов (произведений
интервала с самим собой несколько раз),
типы, содержащие высшие пути, описываются более естественным образом.

К примеру, $2$-сферу можно определить как тип, состоящий из выделенной точки
и квадрата — произведения `I` на `I` — с дополнительным условием, утверждающим, что
любая точка на границе квадрата совпадает с выделенной, как в \inlref{листинге}{lst:S2}.

~~~~{label=lst:S2 float=ht caption="Определение $2$-сферы"}
data S2 = base | loop2 I I
  with
    loop left  j = base
    loop right j = base
    loop i left  = base
    loop i right = base
~~~~

Аналогично можно определить тип, являющийся аналогом любого
конечного CW-комплекса, используя кубы в качестве дисков и накладывая
условия, соответствующие склеивающим отображениям.

По сравнению со стандартной гомотопической теорией типов,
мы получаем возможность работать с клетками в комплексе
более удобным образом: у нас теперь есть не только
элиминатор типа путей, но и возможность осуществлять
паттерн-матчинг по дискам, извлекая «координаты» данной точки
на диске.

В алгебраической топологии верно следующее утверждение,
описывающее произведение двух CW-комплексов
(доказательство можно найти в приложении А
книги Хэтчера по алгебраической топологии[@hatcher]):
если даны два CW-комплекса, и для любого $i$
первый содержит ровно $a_i$ клеток размерности $i$,
а второй — $b_i$ клеток размерности $i$,
то их произведение состоит из $a_i a_j$ клеток размерности $i+j$
для всех $i$ и $j$.

Мы можем доказать аналогичное утверждение в теории типов.
Будем говорить, что тип соответствует конечному CW-комплексу, если:

* все его конструкторы имеют вид `cons I ... I`,
* левые части всех уравнений в условиях представляют собой применение
  конструктора к `left` или `right` по одной из координат,
* правые части всех уравнений в условиях представляют собой
  применение конструктора к произвольным выражениям,
  причем размерность этого конструктора строго меньше
  размерности конструктора, стоящего в левой части уравнения,
* на каждый конструктор размерности $n$ приходятся ровно
  $2n$ условий с ним в левой части, соответственно, подставляющие `left`
  или `right` по очереди в каждую координату.

Пусть даны два типа, соответствующие конечным CW-комплексам,
и при этом первый тип для любого $i$ содержит ровно $a_i$
конструкторов размерности $i$, а второй — $b_i$
конструкторов размерности $i$. Тогда их произведение
гомотопически эквивалентно типу, содержащему $a_i a_j$
конструкторов размерности $i+j$.

Для доказательства этого утверждения явно построим тип,
эквивалентный произведению данных, а также отображения,
задающие эту эквивалентность. Итак, рассмотрим
$s_k$ — некоторый конструктор первого типа размерности $m$
и $t_l$ — некоторый конструктор второго типа размерности $n$.
Тогда добавим в тип, который строим, конструктор $s_kt_l$
размерности $m+n$ и отобразим пару
($s_k$ $i_1 \ldots i_m$, $t_l$ $j_1 \ldots j_n$) в
$s_kt_l$ $i_1 \ldots i_m j_1 \ldots j_n$.

Чтобы такое определение отображения было корректным, необходимо
учесть условия, наложенные на исходные типы. Для каждого
конструктора первого типа $s_k$ рассмотрим все условия из первого
типа, содержащие $s_k$ в левой части
(затем то же самое надо будет сделать для всех конструкторов второго типа).
Пусть некоторое условие имеет вид
$s_k$ $i_1 \ldots \operatorname{left} \ldots i_m$ $\equiv$
$s_q$ $v_1 \ldots v_{m'}$ (аналогично для $\operatorname{right}$).
Когда отображение действует на пару, на первом месте в которой
стоит выражение из левой части уравнения, должно получаться
то же самое, что и когда оно действует на пару, на первом месте
в которой стоит выражение из правой части. Это легко гарантировать,
добавив условие
$s_kt_l$ $i_1 \ldots \operatorname{left} \ldots i_m j_1 \ldots j_n$ $\equiv$
$s_qt_l$ $v_1 \ldots v_{m'} j_1 \ldots j_n$ для всех конструкторов второго типа $t_l$.

Легко убедиться, что получившийся тип также соответствует
конечному CW-комплексу, поскольку удовлетворяет всем условиям просто по построению.

Второе же отображение всякий элемент
$s_kt_l$ $i_1 \ldots i_m j_1 \ldots j_n$ отображает в пару
($s_k$ $i_1 \ldots i_m$, $t_l$ $j_1 \ldots j_n$). Легко видеть,
что это в точности обратное отображение к тому, которое мы построили.
Из этого, в частности, следует, что оно корректно, поскольку
в том типе, из которого оно действует, были склеены в точности те
точки, которые оно отображает в одинаковые.
Также из этого следует, что мы построили эквивалентность.

В качестве примера докажем, что тор гомотопически эквивалентен
произведению двух окружностей. В стандартной гомотопической теории
типов не известно короткого доказательства этого простого утверждения,
но в теории типов с интервалом и условиями мы можем воспользоваться доказанным утверждением.
Действительно, тор, как конечный CW-комплекс, состоит из одной 0-мерной ячейки,
двух одномерных ячеек и одной двумерной ячейки,
в качестве которой мы используем квадрат (\inlref{листинг}{lst:torus}), а
окружность — из одной 0-мерной ячейки и одной одномерной (\inlref{листинг}{lst:s1s1}).
Построив предложенным методом тип, эквивалентный произведению окружностей,
замечаем, что он в точности является тором. Отображения, задающие эквивалентность, приведены в
\inlref{листинге}{lst:torus-s1s1}.

~~~~{label=lst:torus float=ht caption="Определение тора"}
data Torus = base-base | loop-base I | base-loop I | loop-loop I I
  with
    loop-base left  = base-base
    loop-base right = base-base
    base-loop left  = base-base
    base-loop right = base-base
    loop-loop i left  = loop-base i
    loop-loop i right = loop-base i
    loop-loop left  j = base-loop j
    loop-loop right j = base-loop j
~~~~

~~~~{label=lst:s1s1 float=ht caption="Определение \lstinline{S1} и \lstinline{S1×S1}"}
data S1 = base | loop I
  with
    loop left  = base
    loop right = base

data S1xS1 = pair S1 S1
~~~~

~~~~{label=lst:torus-s1s1 float=ht caption="Эквивалентность тора и произведения окружностей"}
f : S1xS1 -> Torus
f (pair base base) = base-base
f (pair (loop i) base) = loop-base i
f (pair base (loop j)) = base-loop j
f (pair (loop i) (loop j)) = loop-loop i j

g : Torus -> S1xS1
g base-base = pair base base
g (loop-base i) = pair (loop i) base
g (base-loop j) = pair base (loop j)
g (loop-loop i j) = pair (loop i) (loop j)

f-then-g : (x : S1xS1) -> x = g (f x)
f-then-g (pair base base) = idp
f-then-g (pair (loop _) base) = idp
f-then-g (pair base (loop _)) = idp
f-then-g (pair (loop _) (loop _)) = idp

g-then-f : (x : Torus) -> x = f (g x)
g-then-f base-base = idp
g-then-f (loop-base _) = idp
g-then-f (base-loop _) = idp
g-then-f (loop-loop _ _) = idp
~~~~

Таким образом, теория типов с интервалом и условиями в некоторых случаях оказывается
удобнее стандартной теории с высшими индуктивными типами. Поскольку, как мы видели,
любой высший индуктивный тип может быть определен в теории с интервалом и условиями,
эта теория «не слабее» стандартной. Существуют ли типы, которые можно определить
в новой теории, но нельзя в старой, на данный момент неизвестно.
